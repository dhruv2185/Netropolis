openapi: 3.0.3
info:
  title: Netropolis Backend API
  version: 1.0.0
  description: This is the Backend API for the Netropolis App. It is used to implement
    functionalities and manage the data for the app.
paths:
  /applications/:
    get:
      operationId: applications_retrieve
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: ''
    post:
      operationId: applications_create
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Applications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Applications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Applications'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: ''
    put:
      operationId: applications_update
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Applications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Applications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Applications'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: ''
    delete:
      operationId: applications_destroy
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /community_manager_register/:
    post:
      operationId: community_manager_register_create
      tags:
      - community_manager_register
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /fetch_user/:
    get:
      operationId: fetch_user_retrieve
      tags:
      - fetch_user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: fetch_user_update
      tags:
      - fetch_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: fetch_user_destroy
      tags:
      - fetch_user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /get_all_quests/:
    get:
      operationId: get_all_quests_retrieve
      tags:
      - get_all_quests
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /get_application_by_id/:
    get:
      operationId: get_application_by_id_retrieve
      tags:
      - get_application_by_id
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /get_applications_by_cm/:
    get:
      operationId: get_applications_by_cm_retrieve
      tags:
      - get_applications_by_cm
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /get_quest_by_cm/:
    get:
      operationId: get_quest_by_cm_retrieve
      tags:
      - get_quest_by_cm
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /get_quest_by_id/:
    get:
      operationId: get_quest_by_id_retrieve
      tags:
      - get_quest_by_id
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /get_schedule_by_application_id/:
    get:
      operationId: get_schedule_by_application_id_retrieve
      tags:
      - get_schedule_by_application_id
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /get_team_by_id/:
    get:
      operationId: get_team_by_id_retrieve
      tags:
      - get_team_by_id
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /get_unviewed/:
    get:
      operationId: get_unviewed_retrieve
      tags:
      - get_unviewed
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /quest_scheduling/:
    get:
      operationId: quest_scheduling_retrieve
      tags:
      - quest_scheduling
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedules'
          description: ''
    post:
      operationId: quest_scheduling_create
      tags:
      - quest_scheduling
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedules'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedules'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedules'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedules'
          description: ''
    put:
      operationId: quest_scheduling_update
      tags:
      - quest_scheduling
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedules'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedules'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedules'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedules'
          description: ''
    delete:
      operationId: quest_scheduling_destroy
      tags:
      - quest_scheduling
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /quests/:
    get:
      operationId: quests_retrieve
      tags:
      - quests
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quests'
          description: ''
    post:
      operationId: quests_create
      tags:
      - quests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quests'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Quests'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Quests'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quests'
          description: ''
    put:
      operationId: quests_update
      tags:
      - quests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quests'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Quests'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Quests'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quests'
          description: ''
    delete:
      operationId: quests_destroy
      tags:
      - quests
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /refresh/:
    post:
      operationId: refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /register/:
    get:
      operationId: register_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - register
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegisterList'
          description: ''
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /search/:
    get:
      operationId: search_retrieve
      tags:
      - search
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quests'
          description: ''
  /send_application_for_review/:
    put:
      operationId: send_application_for_review_update
      tags:
      - send_application_for_review
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /tasks/:
    get:
      operationId: tasks_retrieve
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tasks'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tasks'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tasks'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: ''
    delete:
      operationId: tasks_destroy
      tags:
      - tasks
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /teams/:
    get:
      operationId: teams_retrieve
      tags:
      - teams
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teams'
          description: ''
    post:
      operationId: teams_create
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teams'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teams'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teams'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teams'
          description: ''
    put:
      operationId: teams_update
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teams'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Teams'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Teams'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teams'
          description: ''
    delete:
      operationId: teams_destroy
      tags:
      - teams
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Applications:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          maxLength: 30
        preferred_time_span:
          type: string
        application_date:
          type: string
          format: date-time
          readOnly: true
        approval_status:
          type: boolean
        stay_start_date:
          type: string
          format: date
          nullable: true
        stay_end_date:
          type: string
          format: date
          nullable: true
        special_note:
          type: string
          nullable: true
        desired_tasks:
          type: string
          nullable: true
        remarks:
          type: string
          nullable: true
        user_id:
          type: integer
        quest_id:
          type: integer
        teamId:
          type: integer
      required:
      - application_date
      - approval_status
      - id
      - preferred_time_span
      - quest_id
      - status
      - teamId
      - user_id
    PaginatedRegisterList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Register'
    Quests:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quest_name:
          type: string
        labour_shortage_activities: {}
        natural_activities: {}
        local_activities: {}
        other_information:
          type: string
        region:
          type: string
        genre_tags: {}
        rewards:
          type: string
        fee:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        available_till:
          type: string
          format: date-time
        created_by:
          type: integer
      required:
      - available_till
      - created_at
      - created_by
      - description
      - fee
      - genre_tags
      - id
      - labour_shortage_activities
      - local_activities
      - natural_activities
      - other_information
      - quest_name
      - region
      - rewards
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
      required:
      - email
      - first_name
      - password
      - password2
      - username
    Schedules:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        day_to_day_schedule: {}
        application_id:
          type: integer
        quest_id:
          type: integer
        createdBy:
          type: integer
      required:
      - application_id
      - createdBy
      - day_to_day_schedule
      - end_date
      - id
      - quest_id
      - start_date
    Tasks:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
        created_by:
          type: integer
      required:
      - created_by
      - description
      - id
    Teams:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        team_name:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        number_of_people:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        team_info: {}
        composition:
          type: string
        expectations_for_the_platform:
          type: string
        concerns:
          type: string
        created_by:
          type: integer
          nullable: true
      required:
      - composition
      - concerns
      - created_at
      - expectations_for_the_platform
      - id
      - number_of_people
      - team_info
      - team_name
      - updated_at
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
